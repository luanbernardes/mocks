// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`SelectMock > testing snapshot 1`] = `
VueWrapper {
  "__app": {
    "_component": {
      "name": "VTU_ROOT",
      "render": [Function],
      "setup": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      
      <!--  &lt;div class="select-mock__root" :class="showComponent ? 'active' : ''"&gt;-->
      <!--    &lt;button-->
      <!--      class="select-mock__button"-->
      <!--      :class="showComponent ? 'active' : ''"-->
      <!--      @click="toggleComponent"-->
      <!--    &gt;-->
      <!--      &lt;-->
      <!--    &lt;/button&gt;-->
      <!--    &lt;SelectMockContainer :mock-debug-list="mockDebugList" /&gt;-->
      <!--  &lt;/div&gt;-->
      <div
        data-v-cfd83f72=""
        mockdebuglist="[object Object],[object Object]"
      >
        1
      </div>
      
    </div>,
    "_context": {
      "app": [Circular],
      "components": {
        "transition": {
          "name": "transition",
        },
        "transition-group": {
          "name": "transition-group",
        },
      },
      "config": {
        "compilerOptions": {},
        "errorHandler": undefined,
        "globalProperties": {},
        "isNativeTag": [Function],
        "optionMergeStrategies": {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": {},
      "emitsCache": WeakMap {},
      "mixins": [
        {
          "beforeCreate": [Function],
        },
      ],
      "optionsCache": WeakMap {},
      "propsCache": WeakMap {},
      "provides": {},
      "reload": [Function],
    },
    "_instance": {
      "a": null,
      "accessCache": {},
      "appContext": {
        "app": [Circular],
        "components": {
          "transition": {
            "name": "transition",
          },
          "transition-group": {
            "name": "transition-group",
          },
        },
        "config": {
          "compilerOptions": {},
          "errorHandler": undefined,
          "globalProperties": {},
          "isNativeTag": [Function],
          "optionMergeStrategies": {},
          "performance": false,
          "warnHandler": undefined,
        },
        "directives": {},
        "emitsCache": WeakMap {},
        "mixins": [
          {
            "beforeCreate": [Function],
          },
        ],
        "optionsCache": WeakMap {},
        "propsCache": WeakMap {},
        "provides": {},
        "reload": [Function],
      },
      "asyncDep": null,
      "asyncResolved": false,
      "attrs": {},
      "attrsProxy": null,
      "bc": null,
      "bm": null,
      "bu": null,
      "bum": null,
      "c": null,
      "components": null,
      "ctx": {
        "VTU_COMPONENT": {},
      },
      "da": null,
      "data": {},
      "devtoolsRawSetupState": {
        "VTU_COMPONENT": RefImpl {
          "__v_isRef": true,
          "__v_isShallow": false,
          "_rawValue": {},
          "_value": {},
          "dep": undefined,
        },
      },
      "directives": null,
      "ec": null,
      "effect": ReactiveEffect {
        "_depsLength": 4,
        "_dirtyLevel": 0,
        "_runnings": 0,
        "_shouldSchedule": false,
        "_trackId": 1,
        "active": true,
        "allowRecurse": true,
        "deps": [
          Map {
            [Circular] => 1,
          },
          Map {
            [Circular] => 1,
          },
          Map {
            [Circular] => 1,
          },
          Map {
            [Circular] => 1,
          },
        ],
        "fn": [Function],
        "onTrack": undefined,
        "onTrigger": undefined,
        "scheduler": [Function],
        "trigger": [Function],
      },
      "emit": [Function],
      "emitsOptions": null,
      "emitted": null,
      "exposeProxy": null,
      "exposed": null,
      "inheritAttrs": undefined,
      "isDeactivated": false,
      "isMounted": true,
      "isUnmounted": false,
      "m": null,
      "next": null,
      "parent": null,
      "props": {},
      "propsDefaults": {},
      "propsOptions": [
        {},
        [],
      ],
      "provides": {},
      "proxy": {
        "VTU_COMPONENT": {},
      },
      "refs": {
        "VTU_COMPONENT": {},
      },
      "render": [Function],
      "renderCache": [],
      "root": [Circular],
      "rtc": null,
      "rtg": null,
      "scope": EffectScope {
        "_active": true,
        "cleanups": [],
        "detached": true,
        "effects": [
          ReactiveEffect {
            "_depsLength": 4,
            "_dirtyLevel": 0,
            "_runnings": 0,
            "_shouldSchedule": false,
            "_trackId": 1,
            "active": true,
            "allowRecurse": true,
            "deps": [
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "scheduler": [Function],
            "trigger": [Function],
          },
        ],
        "parent": undefined,
      },
      "setupContext": null,
      "setupState": {
        "VTU_COMPONENT": {},
      },
      "slots": {},
      "slotsProxy": null,
      "sp": null,
      "subTree": {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": null,
        "children": null,
        "component": {
          "a": null,
          "accessCache": {},
          "appContext": {
            "app": [Circular],
            "components": {
              "transition": {
                "name": "transition",
              },
              "transition-group": {
                "name": "transition-group",
              },
            },
            "config": {
              "compilerOptions": {},
              "errorHandler": undefined,
              "globalProperties": {},
              "isNativeTag": [Function],
              "optionMergeStrategies": {},
              "performance": false,
              "warnHandler": undefined,
            },
            "directives": {},
            "emitsCache": WeakMap {},
            "mixins": [
              {
                "beforeCreate": [Function],
              },
            ],
            "optionsCache": WeakMap {},
            "propsCache": WeakMap {},
            "provides": {},
            "reload": [Function],
          },
          "asyncDep": null,
          "asyncResolved": false,
          "attrs": {
            "mockDebugList": [
              {
                "list": [
                  {
                    "delay": 1000,
                    "method": "get",
                    "options": [
                      {
                        "data": {
                          "test": "value success mocked",
                          "test2": "another values",
                        },
                        "id": "mock-test-success",
                        "status": 200,
                        "title": "mock - success",
                      },
                      {
                        "data": "value error mocked",
                        "id": "mock-test-error",
                        "status": 400,
                        "title": "mock - error 400",
                      },
                    ],
                    "path": "/mock-test-MSW-a",
                    "title": "mock-test-MSW-a",
                    "type": "request",
                  },
                  {
                    "delay": 1000,
                    "method": "get",
                    "options": [
                      {
                        "data": "value error mocked",
                        "id": "mock-test-error",
                        "status": 400,
                        "title": "mock - error 400",
                      },
                    ],
                    "path": "/mock-test-MSW-b",
                    "title": "mock-test-MSW-b",
                    "type": "request",
                  },
                ],
                "title": "test MSW",
                "type": "request",
              },
              {
                "list": [
                  {
                    "delay": 1000,
                    "method": "get",
                    "options": [
                      {
                        "data": {
                          "test": "mocked 123qwe",
                          "test2": "456rty",
                        },
                        "id": "mock-test-success-2",
                        "status": 200,
                        "title": "mock - success - 2",
                      },
                      {
                        "data": "mocked error",
                        "id": "mock-test-error-2",
                        "status": 400,
                        "title": "mock - error 400 - 2",
                      },
                    ],
                    "path": "/mock-test-MSW-2",
                    "title": "mock-test-MSW-2",
                    "type": "request",
                  },
                ],
                "title": "test MSW - 2",
                "type": "request",
              },
            ],
          },
          "attrsProxy": null,
          "bc": null,
          "bm": null,
          "bu": null,
          "bum": null,
          "c": null,
          "components": {},
          "ctx": {},
          "da": null,
          "data": {},
          "devtoolsRawSetupState": {},
          "directives": null,
          "ec": null,
          "effect": ReactiveEffect {
            "_depsLength": 7,
            "_dirtyLevel": 0,
            "_runnings": 0,
            "_shouldSchedule": false,
            "_trackId": 1,
            "active": true,
            "allowRecurse": true,
            "deps": [
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
              Map {
                [Circular] => 1,
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "scheduler": [Function],
            "trigger": [Function],
          },
          "emit": [Function],
          "emitsOptions": null,
          "emitted": null,
          "exposeProxy": {},
          "exposed": {},
          "inheritAttrs": undefined,
          "isDeactivated": false,
          "isMounted": true,
          "isUnmounted": false,
          "m": null,
          "next": null,
          "parent": [Circular],
          "props": {},
          "propsDefaults": {},
          "propsOptions": [
            {},
            [],
          ],
          "provides": {},
          "proxy": {},
          "refs": {},
          "render": [Function],
          "renderCache": [],
          "root": [Circular],
          "rtc": null,
          "rtg": null,
          "scope": EffectScope {
            "_active": true,
            "cleanups": [],
            "detached": true,
            "effects": [
              ReactiveEffect {
                "_depsLength": 7,
                "_dirtyLevel": 0,
                "_runnings": 0,
                "_shouldSchedule": false,
                "_trackId": 1,
                "active": true,
                "allowRecurse": true,
                "deps": [
                  Map {
                    [Circular] => 1,
                  },
                  Map {
                    [Circular] => 1,
                  },
                  Map {
                    [Circular] => 1,
                  },
                  Map {
                    [Circular] => 1,
                  },
                  Map {
                    [Circular] => 1,
                  },
                  Map {
                    [Circular] => 1,
                  },
                  Map {
                    [Circular] => 1,
                  },
                ],
                "fn": [Function],
                "onTrack": undefined,
                "onTrigger": undefined,
                "scheduler": [Function],
                "trigger": [Function],
              },
            ],
            "parent": undefined,
          },
          "setupContext": {
            "attrs": {
              "mockDebugList": [
                {
                  "list": [
                    {
                      "delay": 1000,
                      "method": "get",
                      "options": [
                        {
                          "data": {
                            "test": "value success mocked",
                            "test2": "another values",
                          },
                          "id": "mock-test-success",
                          "status": 200,
                          "title": "mock - success",
                        },
                        {
                          "data": "value error mocked",
                          "id": "mock-test-error",
                          "status": 400,
                          "title": "mock - error 400",
                        },
                      ],
                      "path": "/mock-test-MSW-a",
                      "title": "mock-test-MSW-a",
                      "type": "request",
                    },
                    {
                      "delay": 1000,
                      "method": "get",
                      "options": [
                        {
                          "data": "value error mocked",
                          "id": "mock-test-error",
                          "status": 400,
                          "title": "mock - error 400",
                        },
                      ],
                      "path": "/mock-test-MSW-b",
                      "title": "mock-test-MSW-b",
                      "type": "request",
                    },
                  ],
                  "title": "test MSW",
                  "type": "request",
                },
                {
                  "list": [
                    {
                      "delay": 1000,
                      "method": "get",
                      "options": [
                        {
                          "data": {
                            "test": "mocked 123qwe",
                            "test2": "456rty",
                          },
                          "id": "mock-test-success-2",
                          "status": 200,
                          "title": "mock - success - 2",
                        },
                        {
                          "data": "mocked error",
                          "id": "mock-test-error-2",
                          "status": 400,
                          "title": "mock - error 400 - 2",
                        },
                      ],
                      "path": "/mock-test-MSW-2",
                      "title": "mock-test-MSW-2",
                      "type": "request",
                    },
                  ],
                  "title": "test MSW - 2",
                  "type": "request",
                },
              ],
            },
            "emit": [Function],
            "expose": [Function],
            "slots": {},
          },
          "setupState": {},
          "slots": {},
          "slotsProxy": {},
          "sp": null,
          "subTree": {
            "__v_isVNode": true,
            "__v_skip": true,
            "anchor": ,
            "appContext": null,
            "children": [
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "  <div class="select-mock__root" :class="showComponent ? 'active' : ''">",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--  &lt;div class="select-mock__root" :class="showComponent ? 'active' : ''"&gt;-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "    <button",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--    &lt;button-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "      class="select-mock__button"",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--      class="select-mock__button"-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "      :class="showComponent ? 'active' : ''"",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--      :class="showComponent ? 'active' : ''"-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "      @click="toggleComponent"",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--      @click="toggleComponent"-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "    >",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--    &gt;-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "      <",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--      &lt;-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "    </button>",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--    &lt;/button&gt;-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "    <SelectMockContainer :mock-debug-list="mockDebugList" />",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--    &lt;SelectMockContainer :mock-debug-list="mockDebugList" /&gt;-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "  </div>",
                "component": null,
                "ctx": [Circular],
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <!--  &lt;/div&gt;-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(v-cmt),
              },
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "ce": undefined,
                "children": "1",
                "component": null,
                "ctx": null,
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <div
                  data-v-cfd83f72=""
                  mockdebuglist="[object Object],[object Object]"
                >
                  1
                </div>,
                "key": null,
                "patchFlag": 16,
                "props": {
                  "mockDebugList": [
                    {
                      "list": [
                        {
                          "delay": 1000,
                          "method": "get",
                          "options": [
                            {
                              "data": {
                                "test": "value success mocked",
                                "test2": "another values",
                              },
                              "id": "mock-test-success",
                              "status": 200,
                              "title": "mock - success",
                            },
                            {
                              "data": "value error mocked",
                              "id": "mock-test-error",
                              "status": 400,
                              "title": "mock - error 400",
                            },
                          ],
                          "path": "/mock-test-MSW-a",
                          "title": "mock-test-MSW-a",
                          "type": "request",
                        },
                        {
                          "delay": 1000,
                          "method": "get",
                          "options": [
                            {
                              "data": "value error mocked",
                              "id": "mock-test-error",
                              "status": 400,
                              "title": "mock - error 400",
                            },
                          ],
                          "path": "/mock-test-MSW-b",
                          "title": "mock-test-MSW-b",
                          "type": "request",
                        },
                      ],
                      "title": "test MSW",
                      "type": "request",
                    },
                    {
                      "list": [
                        {
                          "delay": 1000,
                          "method": "get",
                          "options": [
                            {
                              "data": {
                                "test": "mocked 123qwe",
                                "test2": "456rty",
                              },
                              "id": "mock-test-success-2",
                              "status": 200,
                              "title": "mock - success - 2",
                            },
                            {
                              "data": "mocked error",
                              "id": "mock-test-error-2",
                              "status": 400,
                              "title": "mock - error 400 - 2",
                            },
                          ],
                          "path": "/mock-test-MSW-2",
                          "title": "mock-test-MSW-2",
                          "type": "request",
                        },
                      ],
                      "title": "test MSW - 2",
                      "type": "request",
                    },
                  ],
                },
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 9,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
            ],
            "component": null,
            "ctx": [Circular],
            "dirs": null,
            "dynamicChildren": [
              {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "ce": undefined,
                "children": "1",
                "component": null,
                "ctx": null,
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <div
                  data-v-cfd83f72=""
                  mockdebuglist="[object Object],[object Object]"
                >
                  1
                </div>,
                "key": null,
                "patchFlag": 16,
                "props": {
                  "mockDebugList": [
                    {
                      "list": [
                        {
                          "delay": 1000,
                          "method": "get",
                          "options": [
                            {
                              "data": {
                                "test": "value success mocked",
                                "test2": "another values",
                              },
                              "id": "mock-test-success",
                              "status": 200,
                              "title": "mock - success",
                            },
                            {
                              "data": "value error mocked",
                              "id": "mock-test-error",
                              "status": 400,
                              "title": "mock - error 400",
                            },
                          ],
                          "path": "/mock-test-MSW-a",
                          "title": "mock-test-MSW-a",
                          "type": "request",
                        },
                        {
                          "delay": 1000,
                          "method": "get",
                          "options": [
                            {
                              "data": "value error mocked",
                              "id": "mock-test-error",
                              "status": 400,
                              "title": "mock - error 400",
                            },
                          ],
                          "path": "/mock-test-MSW-b",
                          "title": "mock-test-MSW-b",
                          "type": "request",
                        },
                      ],
                      "title": "test MSW",
                      "type": "request",
                    },
                    {
                      "list": [
                        {
                          "delay": 1000,
                          "method": "get",
                          "options": [
                            {
                              "data": {
                                "test": "mocked 123qwe",
                                "test2": "456rty",
                              },
                              "id": "mock-test-success-2",
                              "status": 200,
                              "title": "mock - success - 2",
                            },
                            {
                              "data": "mocked error",
                              "id": "mock-test-error-2",
                              "status": 400,
                              "title": "mock - error 400 - 2",
                            },
                          ],
                          "path": "/mock-test-MSW-2",
                          "title": "mock-test-MSW-2",
                          "type": "request",
                        },
                      ],
                      "title": "test MSW - 2",
                      "type": "request",
                    },
                  ],
                },
                "ref": null,
                "scopeId": "data-v-cfd83f72",
                "shapeFlag": 9,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
            ],
            "dynamicProps": null,
            "el": ,
            "key": null,
            "patchFlag": 2112,
            "props": null,
            "ref": null,
            "scopeId": "data-v-cfd83f72",
            "shapeFlag": 16,
            "slotScopeIds": null,
            "ssContent": null,
            "ssFallback": null,
            "staticCount": 0,
            "suspense": null,
            "target": null,
            "targetAnchor": null,
            "transition": null,
            "type": Symbol(v-fgt),
          },
          "suspense": null,
          "suspenseId": 0,
          "type": {
            "__file": "/home/luan/workspace/mocks-vue/src/components/selectMock/SelectMock.vue",
            "__name": "SelectMock",
            "__scopeId": "data-v-cfd83f72",
            "components": {},
            "render": [Function],
            "setup": [Function],
          },
          "u": null,
          "uid": 1,
          "um": null,
          "update": [Function],
          "vnode": [Circular],
          "withProxy": null,
        },
        "ctx": [Circular],
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": ,
        "key": null,
        "patchFlag": 0,
        "props": {
          "mockDebugList": [
            {
              "list": [
                {
                  "delay": 1000,
                  "method": "get",
                  "options": [
                    {
                      "data": {
                        "test": "value success mocked",
                        "test2": "another values",
                      },
                      "id": "mock-test-success",
                      "status": 200,
                      "title": "mock - success",
                    },
                    {
                      "data": "value error mocked",
                      "id": "mock-test-error",
                      "status": 400,
                      "title": "mock - error 400",
                    },
                  ],
                  "path": "/mock-test-MSW-a",
                  "title": "mock-test-MSW-a",
                  "type": "request",
                },
                {
                  "delay": 1000,
                  "method": "get",
                  "options": [
                    {
                      "data": "value error mocked",
                      "id": "mock-test-error",
                      "status": 400,
                      "title": "mock - error 400",
                    },
                  ],
                  "path": "/mock-test-MSW-b",
                  "title": "mock-test-MSW-b",
                  "type": "request",
                },
              ],
              "title": "test MSW",
              "type": "request",
            },
            {
              "list": [
                {
                  "delay": 1000,
                  "method": "get",
                  "options": [
                    {
                      "data": {
                        "test": "mocked 123qwe",
                        "test2": "456rty",
                      },
                      "id": "mock-test-success-2",
                      "status": 200,
                      "title": "mock - success - 2",
                    },
                    {
                      "data": "mocked error",
                      "id": "mock-test-error-2",
                      "status": 400,
                      "title": "mock - error 400 - 2",
                    },
                  ],
                  "path": "/mock-test-MSW-2",
                  "title": "mock-test-MSW-2",
                  "type": "request",
                },
              ],
              "title": "test MSW - 2",
              "type": "request",
            },
          ],
          "ref": "VTU_COMPONENT",
        },
        "ref": {
          "f": false,
          "i": [Circular],
          "k": undefined,
          "r": "VTU_COMPONENT",
        },
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": {
          "__file": "/home/luan/workspace/mocks-vue/src/components/selectMock/SelectMock.vue",
          "__name": "SelectMock",
          "__scopeId": "data-v-cfd83f72",
          "components": {},
          "render": [Function],
          "setup": [Function],
        },
      },
      "suspense": null,
      "suspenseId": 0,
      "type": {
        "name": "VTU_ROOT",
        "render": [Function],
        "setup": [Function],
      },
      "u": null,
      "uid": 0,
      "um": null,
      "update": [Function],
      "vnode": {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": {
          "app": [Circular],
          "components": {
            "transition": {
              "name": "transition",
            },
            "transition-group": {
              "name": "transition-group",
            },
          },
          "config": {
            "compilerOptions": {},
            "errorHandler": undefined,
            "globalProperties": {},
            "isNativeTag": [Function],
            "optionMergeStrategies": {},
            "performance": false,
            "warnHandler": undefined,
          },
          "directives": {},
          "emitsCache": WeakMap {},
          "mixins": [
            {
              "beforeCreate": [Function],
            },
          ],
          "optionsCache": WeakMap {},
          "propsCache": WeakMap {},
          "provides": {},
          "reload": [Function],
        },
        "children": null,
        "component": [Circular],
        "ctx": null,
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": ,
        "key": null,
        "patchFlag": 0,
        "props": null,
        "ref": null,
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": {
          "name": "VTU_ROOT",
          "render": [Function],
          "setup": [Function],
        },
      },
      "withProxy": null,
    },
    "_props": null,
    "_uid": 0,
    "component": [Function],
    "config": {
      "compilerOptions": {},
      "errorHandler": undefined,
      "globalProperties": {},
      "isNativeTag": [Function],
      "optionMergeStrategies": {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "runWithContext": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.4.21",
  },
  "__setProps": [Function],
  "cleanUpCallbacks": [
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
  ],
  "componentVM": {},
  "isDisabled": [Function],
  "rootVM": {
    "VTU_COMPONENT": {},
  },
  "wrapperElement": ,
}
`;
